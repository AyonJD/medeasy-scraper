version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: medeasy_postgres
    environment:
      POSTGRES_DB: medeasy_db
      POSTGRES_USER: medeasy_user
      POSTGRES_PASSWORD: medeasy_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medeasy_user -d medeasy_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    container_name: medeasy_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MedEasy Scraper API
  api:
    build: .
    container_name: medeasy_api
    environment:
      - DATABASE_URL=postgresql://medeasy_user:medeasy_password@postgres:5432/medeasy_db
      - REDIS_URL=redis://redis:6379/0
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: medeasy_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 